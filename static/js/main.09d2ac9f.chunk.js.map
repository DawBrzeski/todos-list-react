{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","className","autofocus","placeholder","Tasks","tasks","map","task","done","hideDoneTasks","content","id","Buttons","hideDoneTask","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TASeA,EAPF,SAACC,GAAD,OACT,uBAAMC,UAAU,OAAhB,UACI,uBAAOC,WAAS,EAACD,UAAU,cAAcE,YAAY,0BACrD,wBAAQF,UAAU,eAAlB,gCCmBOG,G,MAtBD,SAACJ,GAAD,OACV,oBAAIC,UAAU,OAAd,SACKD,EAAMK,MAAMC,KAAI,SAAAC,GAAI,OACjB,qBACIN,UAAS,eAAWM,EAAKC,MAAQR,EAAMS,cAAiB,eAAiB,IAD7E,UAGI,wBAAQR,UAAS,4BAAjB,SACKM,EAAKC,KAAO,SAAM,KAGvB,sBAAMP,UAAS,kBAAaM,EAAKC,KAAO,iBAAmB,IAA3D,SACKD,EAAKG,UAGV,wBAAQT,UAAU,wBAAlB,4BAXKM,EAAKI,WCgBXC,G,MAlBC,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAOQ,EAAV,EAAUA,aAAV,OACZ,qBAAKZ,UAAU,UAAf,SACKI,EAAMS,OAAS,GACZ,qCACI,yBAAQb,UAAU,iBAAlB,UACKY,EAAe,QAAU,QAD9B,qBAGA,wBAAQZ,UAAU,iBACdc,SAAUV,EAAMW,OAAM,qBAAGR,QAD7B,0CCIDS,G,MAZC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAMC,EAAf,EAAeA,mBAAf,OACZ,0BAASnB,UAAU,UAAnB,UACA,yBAAQA,UAAU,kBAAlB,UACE,oBAAIA,UAAU,iBAAd,SAAgCiB,IAChCE,KAEF,qBAAKnB,UAAU,gBAAf,SACGkB,SCDQE,G,MANA,SAAC,GAAD,IAAEH,EAAF,EAAEA,MAAF,OACX,iCACA,6BAAKA,QCIMI,G,MANG,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACd,sBAAMtB,UAAU,YAAhB,SACKsB,MCGHlB,EAAQ,CACZ,CAAEM,GAAI,EAAGD,QAAS,yBAAqBF,MAAM,GAC7C,CAAEG,GAAI,EAAGD,QAAS,6BAAeF,MAAM,IAwB1BgB,MAlBf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQN,MAAM,qBACd,cAAC,EAAD,CACEA,MAAM,qBACNC,KAAM,cAAC,EAAD,MAER,cAAC,EAAD,CACED,MAAM,mBACNC,KAAM,cAAC,EAAD,CAAOd,MAAOA,EAAOQ,aAZd,QAabO,mBAAoB,cAAC,EAAD,CAASf,MAAOA,EAAOQ,aAb9B,cCDNY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.09d2ac9f.chunk.js","sourcesContent":["import \"./style.css\"; \n\nconst Form = (props) => (\n    <form className=\"form\">\n        <input autofocus className=\"form__input\" placeholder=\"Co jest do zrobienia?\"></input>\n        <button className=\"form__button\"> Dodaj zadanie</button>\n    </form>\n);\n\nexport default Form; ","import \"./style.css\";\n\nconst Tasks = (props) => (\n    <ul className=\"list\">\n        {props.tasks.map(task => (\n            <li key={task.id}\n                className={`item ${(task.done && props.hideDoneTasks) ? \"item__hidden\" : \"\"}`}>\n\n                <button className={`button button__toggleDone`}>\n                    {task.done ? \"âœ”\" : \"\"}\n                </button>\n\n                <span className={`content ${task.done ? \" content__done\" : \"\"}`}>\n                    {task.content}\n                </span>\n\n                <button className=\"button button__remove\">\n                    ðŸ—‘\n                </button>\n            </li>\n        ))}\n    </ul >\n);\n\nexport default Tasks; ","import React from \"react\";\nimport \"./style.css\";\n\nconst Buttons = ({ tasks, hideDoneTask }) => (\n    <div className=\"buttons\">\n        {tasks.length > 0 && (\n            <>\n                <button className=\"buttons_button\">\n                    {hideDoneTask ? \"Pokaz\" : \"Ukryj\"} ukoÅ„czone\n                </button>\n                <button className=\"buttons_button\"\n                    disabled={tasks.every(({ done }) => done)}\n                >UkoÅ„cz wszsytkie\n                </button>\n            </>\n\n        )}\n    </div>\n);\n\n\nexport default Buttons;\n","import \"./style.css\";\n\nconst Section = ({title, body, extraHeaderContent}) => (\n    <section className=\"section\">\n    <header className=\"section__header\">\n      <h2 className=\"section__title\">{title}</h2>\n     {extraHeaderContent}\n    </header>\n    <div className=\"section__body\">\n      {body}\n    </div>\n  </section>\n); \n\nexport default Section; \n","import \"./style.css\"; \n\nconst Header = ({title}) => (\n    <header>\n    <h1>{title}</h1>\n  </header>\n);\n\nexport default Header; ","import \"./style.css\"; \n\nconst Container = ({children}) => (\n    <main className=\"container\">\n        {children}\n    </main>\n); \n\nexport default Container; ","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nconst tasks = [\n  { id: 1, content: \"przesjÄ‡ na reacta\", done: false },\n  { id: 2, content: \"zjÄ™Å›c buÅ‚ke\", done: true },\n];\n\n\nconst hideDoneTask = false;\n\nfunction App() {\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form />}\n      />\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={<Tasks tasks={tasks} hideDoneTask={hideDoneTask} />}\n        extraHeaderContent={<Buttons tasks={tasks} hideDoneTask={hideDoneTask} />}\n      />\n\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}